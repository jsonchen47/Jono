type Project @model @searchable @auth(rules: [{allow: public}]) {
  id: ID!
  ownerIDs: [String]
  Users: [User] @manyToMany(relationName: "UserProject")
  title: String!
  description: String
  image: String
  skills: [String]
  resources: [String]
  categories: [String]
  longitude: Float
  latitude: Float
  city: String
  joinRequestIDs: [String]
}

type ChatRoom @model @searchable @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  image: String
  Messages: [Message] @hasMany(indexName: "byChatRoom", fields: ["id"])
  users: [User] @manyToMany(relationName: "UserChatRoom")
  LastMessage: Message @hasOne
}

type Message @model @searchable @auth(rules: [{allow: public}]) {
  id: ID!
  createdAt: AWSDateTime!
  text: String!
  chatroomID: ID! @index(name: "byChatRoom", sortKeyFields: ["createdAt"], queryField: "listMessagesByChatRoom")
  userID: ID! @index(name: "byUser")
  images: [String]
}

type User @model @searchable @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  status: String
  image: String
  Messages: [Message] @hasMany(indexName: "byUser", fields: ["id"])
  ChatRooms: [ChatRoom] @manyToMany(relationName: "UserChatRoom")
  Projects: [Project] @manyToMany(relationName: "UserProject")
  savedProjectsIDs: [String]
  bio: String
  numProjects: Int
  numTeams: Int
  numConnections: Int
  username: String
  skills: [String]
  resources: [String]
  links: [String]
  premium: Boolean
}
 